public class Main {
    public static double futureValueRecursive(double presentValue, double rate, int years) {
        if (years == 0) {
            return presentValue;
        }
        return futureValueRecursive(presentValue, rate, years - 1) * (1 + rate);
    }


    public static double futureValueMemo(double presentValue, double rate, int years, Double[] memo) {
        if (years == 0) return presentValue;
        if (memo[years] != null) return memo[years];

        memo[years] = futureValueMemo(presentValue, rate, years - 1, memo) * (1 + rate);
        return memo[years];
    }

    public static void main(String[] args) {
        double presentValue = 10000; // ₹10,000 initial investment
        double annualRate = 0.08;    // 8% growth per year
        int years = 5;

        // Basic recursive approach
        double result = futureValueRecursive(presentValue, annualRate, years);
        System.out.printf("Recursive Future Value (Year %d): ₹%.2f\n", years, result);

        // Optimized approach
        Double[] memo = new Double[years + 1];
        double optimizedResult = futureValueMemo(presentValue, annualRate, years, memo);
        System.out.printf("Memoized Future Value (Year %d): ₹%.2f\n", years, optimizedResult);
    }
}
